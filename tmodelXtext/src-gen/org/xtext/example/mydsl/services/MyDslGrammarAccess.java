/*
 * generated by Xtext 2.15.0
 */
package org.xtext.example.mydsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class MyDslGrammarAccess extends AbstractGrammarElementFinder {
	
	public class LoaderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.loader");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLoaderKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLoadmodelKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cLoadmodelAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLoadmodelLoadModelParserRuleCall_3_0 = (RuleCall)cLoadmodelAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cOperationsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cOperationAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cOperationOperationParserRuleCall_4_2_0 = (RuleCall)cOperationAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cOperationAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cOperationOperationParserRuleCall_4_3_1_0 = (RuleCall)cOperationAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//loader:
		//	'loader'
		//	'{'
		//	'loadmodel' loadmodel=LoadModel ('operations' '{' operation+=Operation ("," operation+=Operation)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'loader' '{' 'loadmodel' loadmodel=LoadModel ('operations' '{' operation+=Operation ("," operation+=Operation)* '}')?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'loader'
		public Keyword getLoaderKeyword_0() { return cLoaderKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'loadmodel'
		public Keyword getLoadmodelKeyword_2() { return cLoadmodelKeyword_2; }
		
		//loadmodel=LoadModel
		public Assignment getLoadmodelAssignment_3() { return cLoadmodelAssignment_3; }
		
		//LoadModel
		public RuleCall getLoadmodelLoadModelParserRuleCall_3_0() { return cLoadmodelLoadModelParserRuleCall_3_0; }
		
		//('operations' '{' operation+=Operation ("," operation+=Operation)* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'operations'
		public Keyword getOperationsKeyword_4_0() { return cOperationsKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//operation+=Operation
		public Assignment getOperationAssignment_4_2() { return cOperationAssignment_4_2; }
		
		//Operation
		public RuleCall getOperationOperationParserRuleCall_4_2_0() { return cOperationOperationParserRuleCall_4_2_0; }
		
		//("," operation+=Operation)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//operation+=Operation
		public Assignment getOperationAssignment_4_3_1() { return cOperationAssignment_4_3_1; }
		
		//Operation
		public RuleCall getOperationOperationParserRuleCall_4_3_1_0() { return cOperationOperationParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class OperationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Operation");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAddParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cDeleteParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cUpdateParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Operation:
		//	Add | Delete | Update;
		@Override public ParserRule getRule() { return rule; }
		
		//Add | Delete | Update
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Add
		public RuleCall getAddParserRuleCall_0() { return cAddParserRuleCall_0; }
		
		//Delete
		public RuleCall getDeleteParserRuleCall_1() { return cDeleteParserRuleCall_1; }
		
		//Update
		public RuleCall getUpdateParserRuleCall_2() { return cUpdateParserRuleCall_2; }
	}
	public class LoadModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.LoadModel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cLoadModelAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cUrlAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cUrlEStringParserRuleCall_1_0 = (RuleCall)cUrlAssignment_1.eContents().get(0);
		
		//LoadModel:
		//	{LoadModel} url=EString?;
		@Override public ParserRule getRule() { return rule; }
		
		//{LoadModel} url=EString?
		public Group getGroup() { return cGroup; }
		
		//{LoadModel}
		public Action getLoadModelAction_0() { return cLoadModelAction_0; }
		
		//url=EString?
		public Assignment getUrlAssignment_1() { return cUrlAssignment_1; }
		
		//EString
		public RuleCall getUrlEStringParserRuleCall_1_0() { return cUrlEStringParserRuleCall_1_0; }
	}
	public class TableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Table");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTableAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTableKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Table:
		//	{Table}
		//	'Table'
		//	'{'
		//	Name=EString?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Table} 'Table' '{' Name=EString? '}'
		public Group getGroup() { return cGroup; }
		
		//{Table}
		public Action getTableAction_0() { return cTableAction_0; }
		
		//'Table'
		public Keyword getTableKeyword_1() { return cTableKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//Name=EString?
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ColumnElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Column");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cColumnAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cColumnKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cTableKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cTableNameAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTableNameEStringParserRuleCall_4_1_0 = (RuleCall)cTableNameAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Column:
		//	{Column}
		//	'Column'
		//	'{'
		//	Name=EString? ('table' tableName=EString)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Column} 'Column' '{' Name=EString? ('table' tableName=EString)? '}'
		public Group getGroup() { return cGroup; }
		
		//{Column}
		public Action getColumnAction_0() { return cColumnAction_0; }
		
		//'Column'
		public Keyword getColumnKeyword_1() { return cColumnKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//Name=EString?
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }
		
		//('table' tableName=EString)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'table'
		public Keyword getTableKeyword_4_0() { return cTableKeyword_4_0; }
		
		//tableName=EString
		public Assignment getTableNameAssignment_4_1() { return cTableNameAssignment_4_1; }
		
		//EString
		public RuleCall getTableNameEStringParserRuleCall_4_1_0() { return cTableNameEStringParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class AddElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Add");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cAddAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAddKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTableAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTableTableParserRuleCall_3_0 = (RuleCall)cTableAssignment_3.eContents().get(0);
		private final Assignment cColumnAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cColumnColumnParserRuleCall_4_0 = (RuleCall)cColumnAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Add:
		//	{Add}
		//	'Add'
		//	'{'
		//	table=Table?
		//	column=Column?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Add} 'Add' '{' table=Table? column=Column? '}'
		public Group getGroup() { return cGroup; }
		
		//{Add}
		public Action getAddAction_0() { return cAddAction_0; }
		
		//'Add'
		public Keyword getAddKeyword_1() { return cAddKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//table=Table?
		public Assignment getTableAssignment_3() { return cTableAssignment_3; }
		
		//Table
		public RuleCall getTableTableParserRuleCall_3_0() { return cTableTableParserRuleCall_3_0; }
		
		//column=Column?
		public Assignment getColumnAssignment_4() { return cColumnAssignment_4; }
		
		//Column
		public RuleCall getColumnColumnParserRuleCall_4_0() { return cColumnColumnParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class DeleteElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Delete");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cDeleteAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDeleteKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTableAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTableTableParserRuleCall_3_0 = (RuleCall)cTableAssignment_3.eContents().get(0);
		private final Assignment cColumnAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cColumnColumnParserRuleCall_4_0 = (RuleCall)cColumnAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Delete:
		//	{Delete}
		//	'Delete'
		//	'{'
		//	table=Table?
		//	column=Column?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Delete} 'Delete' '{' table=Table? column=Column? '}'
		public Group getGroup() { return cGroup; }
		
		//{Delete}
		public Action getDeleteAction_0() { return cDeleteAction_0; }
		
		//'Delete'
		public Keyword getDeleteKeyword_1() { return cDeleteKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//table=Table?
		public Assignment getTableAssignment_3() { return cTableAssignment_3; }
		
		//Table
		public RuleCall getTableTableParserRuleCall_3_0() { return cTableTableParserRuleCall_3_0; }
		
		//column=Column?
		public Assignment getColumnAssignment_4() { return cColumnAssignment_4; }
		
		//Column
		public RuleCall getColumnColumnParserRuleCall_4_0() { return cColumnColumnParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class UpdateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.Update");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUpdateKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTableAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTableTableParserRuleCall_2_0 = (RuleCall)cTableAssignment_2.eContents().get(0);
		private final Assignment cColumnAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cColumnColumnParserRuleCall_3_0 = (RuleCall)cColumnAssignment_3.eContents().get(0);
		private final Keyword cNewNameKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cNewNameAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cNewNameEStringParserRuleCall_5_0 = (RuleCall)cNewNameAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Update:
		//	'Update'
		//	'{'
		//	table=Table?
		//	column=Column?
		//	'newName' newName=EString
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Update' '{' table=Table? column=Column? 'newName' newName=EString '}'
		public Group getGroup() { return cGroup; }
		
		//'Update'
		public Keyword getUpdateKeyword_0() { return cUpdateKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//table=Table?
		public Assignment getTableAssignment_2() { return cTableAssignment_2; }
		
		//Table
		public RuleCall getTableTableParserRuleCall_2_0() { return cTableTableParserRuleCall_2_0; }
		
		//column=Column?
		public Assignment getColumnAssignment_3() { return cColumnAssignment_3; }
		
		//Column
		public RuleCall getColumnColumnParserRuleCall_3_0() { return cColumnColumnParserRuleCall_3_0; }
		
		//'newName'
		public Keyword getNewNameKeyword_4() { return cNewNameKeyword_4; }
		
		//newName=EString
		public Assignment getNewNameAssignment_5() { return cNewNameAssignment_5; }
		
		//EString
		public RuleCall getNewNameEStringParserRuleCall_5_0() { return cNewNameEStringParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.mydsl.MyDsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	
	
	private final LoaderElements pLoader;
	private final OperationElements pOperation;
	private final LoadModelElements pLoadModel;
	private final TableElements pTable;
	private final ColumnElements pColumn;
	private final AddElements pAdd;
	private final DeleteElements pDelete;
	private final UpdateElements pUpdate;
	private final EStringElements pEString;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public MyDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pLoader = new LoaderElements();
		this.pOperation = new OperationElements();
		this.pLoadModel = new LoadModelElements();
		this.pTable = new TableElements();
		this.pColumn = new ColumnElements();
		this.pAdd = new AddElements();
		this.pDelete = new DeleteElements();
		this.pUpdate = new UpdateElements();
		this.pEString = new EStringElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.mydsl.MyDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//loader:
	//	'loader'
	//	'{'
	//	'loadmodel' loadmodel=LoadModel ('operations' '{' operation+=Operation ("," operation+=Operation)* '}')?
	//	'}';
	public LoaderElements getLoaderAccess() {
		return pLoader;
	}
	
	public ParserRule getLoaderRule() {
		return getLoaderAccess().getRule();
	}
	
	//Operation:
	//	Add | Delete | Update;
	public OperationElements getOperationAccess() {
		return pOperation;
	}
	
	public ParserRule getOperationRule() {
		return getOperationAccess().getRule();
	}
	
	//LoadModel:
	//	{LoadModel} url=EString?;
	public LoadModelElements getLoadModelAccess() {
		return pLoadModel;
	}
	
	public ParserRule getLoadModelRule() {
		return getLoadModelAccess().getRule();
	}
	
	//Table:
	//	{Table}
	//	'Table'
	//	'{'
	//	Name=EString?
	//	'}';
	public TableElements getTableAccess() {
		return pTable;
	}
	
	public ParserRule getTableRule() {
		return getTableAccess().getRule();
	}
	
	//Column:
	//	{Column}
	//	'Column'
	//	'{'
	//	Name=EString? ('table' tableName=EString)?
	//	'}';
	public ColumnElements getColumnAccess() {
		return pColumn;
	}
	
	public ParserRule getColumnRule() {
		return getColumnAccess().getRule();
	}
	
	//Add:
	//	{Add}
	//	'Add'
	//	'{'
	//	table=Table?
	//	column=Column?
	//	'}';
	public AddElements getAddAccess() {
		return pAdd;
	}
	
	public ParserRule getAddRule() {
		return getAddAccess().getRule();
	}
	
	//Delete:
	//	{Delete}
	//	'Delete'
	//	'{'
	//	table=Table?
	//	column=Column?
	//	'}';
	public DeleteElements getDeleteAccess() {
		return pDelete;
	}
	
	public ParserRule getDeleteRule() {
		return getDeleteAccess().getRule();
	}
	
	//Update:
	//	'Update'
	//	'{'
	//	table=Table?
	//	column=Column?
	//	'newName' newName=EString
	//	'}';
	public UpdateElements getUpdateAccess() {
		return pUpdate;
	}
	
	public ParserRule getUpdateRule() {
		return getUpdateAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
