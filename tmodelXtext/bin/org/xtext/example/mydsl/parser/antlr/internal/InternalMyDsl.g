/*
 * generated by Xtext 2.15.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "loader";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleloader
entryRuleloader returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoaderRule()); }
	iv_ruleloader=ruleloader
	{ $current=$iv_ruleloader.current; }
	EOF;

// Rule loader
ruleloader returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='loader'
		{
			newLeafNode(otherlv_0, grammarAccess.getLoaderAccess().getLoaderKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getLoaderAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='loadmodel'
		{
			newLeafNode(otherlv_2, grammarAccess.getLoaderAccess().getLoadmodelKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLoaderAccess().getLoadmodelLoadModelParserRuleCall_3_0());
				}
				lv_loadmodel_3_0=ruleLoadModel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoaderRule());
					}
					set(
						$current,
						"loadmodel",
						lv_loadmodel_3_0,
						"org.xtext.example.mydsl.MyDsl.LoadModel");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4='operations'
			{
				newLeafNode(otherlv_4, grammarAccess.getLoaderAccess().getOperationsKeyword_4_0());
			}
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getLoaderAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getLoaderAccess().getOperationOperationParserRuleCall_4_2_0());
					}
					lv_operation_6_0=ruleOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getLoaderRule());
						}
						add(
							$current,
							"operation",
							lv_operation_6_0,
							"org.xtext.example.mydsl.MyDsl.Operation");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getLoaderAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getLoaderAccess().getOperationOperationParserRuleCall_4_3_1_0());
						}
						lv_operation_8_0=ruleOperation
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getLoaderRule());
							}
							add(
								$current,
								"operation",
								lv_operation_8_0,
								"org.xtext.example.mydsl.MyDsl.Operation");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9='}'
			{
				newLeafNode(otherlv_9, grammarAccess.getLoaderAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getLoaderAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleOperation
entryRuleOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationRule()); }
	iv_ruleOperation=ruleOperation
	{ $current=$iv_ruleOperation.current; }
	EOF;

// Rule Operation
ruleOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOperationAccess().getAddParserRuleCall_0());
		}
		this_Add_0=ruleAdd
		{
			$current = $this_Add_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationAccess().getDeleteParserRuleCall_1());
		}
		this_Delete_1=ruleDelete
		{
			$current = $this_Delete_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOperationAccess().getUpdateParserRuleCall_2());
		}
		this_Update_2=ruleUpdate
		{
			$current = $this_Update_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleLoadModel
entryRuleLoadModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLoadModelRule()); }
	iv_ruleLoadModel=ruleLoadModel
	{ $current=$iv_ruleLoadModel.current; }
	EOF;

// Rule LoadModel
ruleLoadModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLoadModelAccess().getLoadModelAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getLoadModelAccess().getUrlEStringParserRuleCall_1_0());
				}
				lv_url_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLoadModelRule());
					}
					set(
						$current,
						"url",
						lv_url_1_0,
						"org.xtext.example.mydsl.MyDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleTable
entryRuleTable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTableRule()); }
	iv_ruleTable=ruleTable
	{ $current=$iv_ruleTable.current; }
	EOF;

// Rule Table
ruleTable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTableAccess().getTableAction_0(),
					$current);
			}
		)
		otherlv_1='Table'
		{
			newLeafNode(otherlv_1, grammarAccess.getTableAccess().getTableKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getTableAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTableAccess().getNameEStringParserRuleCall_3_0());
				}
				lv_Name_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableRule());
					}
					set(
						$current,
						"Name",
						lv_Name_3_0,
						"org.xtext.example.mydsl.MyDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getTableAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleColumn
entryRuleColumn returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColumnRule()); }
	iv_ruleColumn=ruleColumn
	{ $current=$iv_ruleColumn.current; }
	EOF;

// Rule Column
ruleColumn returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getColumnAccess().getColumnAction_0(),
					$current);
			}
		)
		otherlv_1='Column'
		{
			newLeafNode(otherlv_1, grammarAccess.getColumnAccess().getColumnKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getColumnAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getColumnAccess().getNameEStringParserRuleCall_3_0());
				}
				lv_Name_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getColumnRule());
					}
					set(
						$current,
						"Name",
						lv_Name_3_0,
						"org.xtext.example.mydsl.MyDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_4='table'
			{
				newLeafNode(otherlv_4, grammarAccess.getColumnAccess().getTableKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getColumnAccess().getTableNameEStringParserRuleCall_4_1_0());
					}
					lv_tableName_5_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getColumnRule());
						}
						set(
							$current,
							"tableName",
							lv_tableName_5_0,
							"org.xtext.example.mydsl.MyDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getColumnAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleAdd
entryRuleAdd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAddRule()); }
	iv_ruleAdd=ruleAdd
	{ $current=$iv_ruleAdd.current; }
	EOF;

// Rule Add
ruleAdd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAddAccess().getAddAction_0(),
					$current);
			}
		)
		otherlv_1='Add'
		{
			newLeafNode(otherlv_1, grammarAccess.getAddAccess().getAddKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getAddAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAddAccess().getTableTableParserRuleCall_3_0());
				}
				lv_table_3_0=ruleTable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAddRule());
					}
					set(
						$current,
						"table",
						lv_table_3_0,
						"org.xtext.example.mydsl.MyDsl.Table");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getAddAccess().getColumnColumnParserRuleCall_4_0());
				}
				lv_column_4_0=ruleColumn
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAddRule());
					}
					set(
						$current,
						"column",
						lv_column_4_0,
						"org.xtext.example.mydsl.MyDsl.Column");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getAddAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleDelete
entryRuleDelete returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeleteRule()); }
	iv_ruleDelete=ruleDelete
	{ $current=$iv_ruleDelete.current; }
	EOF;

// Rule Delete
ruleDelete returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDeleteAccess().getDeleteAction_0(),
					$current);
			}
		)
		otherlv_1='Delete'
		{
			newLeafNode(otherlv_1, grammarAccess.getDeleteAccess().getDeleteKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getDeleteAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeleteAccess().getTableTableParserRuleCall_3_0());
				}
				lv_table_3_0=ruleTable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeleteRule());
					}
					set(
						$current,
						"table",
						lv_table_3_0,
						"org.xtext.example.mydsl.MyDsl.Table");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getDeleteAccess().getColumnColumnParserRuleCall_4_0());
				}
				lv_column_4_0=ruleColumn
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeleteRule());
					}
					set(
						$current,
						"column",
						lv_column_4_0,
						"org.xtext.example.mydsl.MyDsl.Column");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getDeleteAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleUpdate
entryRuleUpdate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUpdateRule()); }
	iv_ruleUpdate=ruleUpdate
	{ $current=$iv_ruleUpdate.current; }
	EOF;

// Rule Update
ruleUpdate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Update'
		{
			newLeafNode(otherlv_0, grammarAccess.getUpdateAccess().getUpdateKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getUpdateAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUpdateAccess().getTableTableParserRuleCall_2_0());
				}
				lv_table_2_0=ruleTable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUpdateRule());
					}
					set(
						$current,
						"table",
						lv_table_2_0,
						"org.xtext.example.mydsl.MyDsl.Table");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getUpdateAccess().getColumnColumnParserRuleCall_3_0());
				}
				lv_column_3_0=ruleColumn
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUpdateRule());
					}
					set(
						$current,
						"column",
						lv_column_3_0,
						"org.xtext.example.mydsl.MyDsl.Column");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_4='newName'
		{
			newLeafNode(otherlv_4, grammarAccess.getUpdateAccess().getNewNameKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUpdateAccess().getNewNameEStringParserRuleCall_5_0());
				}
				lv_newName_5_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUpdateRule());
					}
					set(
						$current,
						"newName",
						lv_newName_5_0,
						"org.xtext.example.mydsl.MyDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getUpdateAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
