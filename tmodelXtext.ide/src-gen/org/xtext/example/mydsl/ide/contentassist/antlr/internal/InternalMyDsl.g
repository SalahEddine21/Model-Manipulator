/*
 * generated by Xtext 2.15.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleloader
entryRuleloader
:
{ before(grammarAccess.getLoaderRule()); }
	 ruleloader
{ after(grammarAccess.getLoaderRule()); } 
	 EOF 
;

// Rule loader
ruleloader 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLoaderAccess().getGroup()); }
		(rule__Loader__Group__0)
		{ after(grammarAccess.getLoaderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperation
entryRuleOperation
:
{ before(grammarAccess.getOperationRule()); }
	 ruleOperation
{ after(grammarAccess.getOperationRule()); } 
	 EOF 
;

// Rule Operation
ruleOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationAccess().getAlternatives()); }
		(rule__Operation__Alternatives)
		{ after(grammarAccess.getOperationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLoadModel
entryRuleLoadModel
:
{ before(grammarAccess.getLoadModelRule()); }
	 ruleLoadModel
{ after(grammarAccess.getLoadModelRule()); } 
	 EOF 
;

// Rule LoadModel
ruleLoadModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLoadModelAccess().getGroup()); }
		(rule__LoadModel__Group__0)
		{ after(grammarAccess.getLoadModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTable
entryRuleTable
:
{ before(grammarAccess.getTableRule()); }
	 ruleTable
{ after(grammarAccess.getTableRule()); } 
	 EOF 
;

// Rule Table
ruleTable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTableAccess().getGroup()); }
		(rule__Table__Group__0)
		{ after(grammarAccess.getTableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColumn
entryRuleColumn
:
{ before(grammarAccess.getColumnRule()); }
	 ruleColumn
{ after(grammarAccess.getColumnRule()); } 
	 EOF 
;

// Rule Column
ruleColumn 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColumnAccess().getGroup()); }
		(rule__Column__Group__0)
		{ after(grammarAccess.getColumnAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAdd
entryRuleAdd
:
{ before(grammarAccess.getAddRule()); }
	 ruleAdd
{ after(grammarAccess.getAddRule()); } 
	 EOF 
;

// Rule Add
ruleAdd 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAddAccess().getGroup()); }
		(rule__Add__Group__0)
		{ after(grammarAccess.getAddAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDelete
entryRuleDelete
:
{ before(grammarAccess.getDeleteRule()); }
	 ruleDelete
{ after(grammarAccess.getDeleteRule()); } 
	 EOF 
;

// Rule Delete
ruleDelete 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeleteAccess().getGroup()); }
		(rule__Delete__Group__0)
		{ after(grammarAccess.getDeleteAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpdate
entryRuleUpdate
:
{ before(grammarAccess.getUpdateRule()); }
	 ruleUpdate
{ after(grammarAccess.getUpdateRule()); } 
	 EOF 
;

// Rule Update
ruleUpdate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpdateAccess().getGroup()); }
		(rule__Update__Group__0)
		{ after(grammarAccess.getUpdateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getAddParserRuleCall_0()); }
		ruleAdd
		{ after(grammarAccess.getOperationAccess().getAddParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperationAccess().getDeleteParserRuleCall_1()); }
		ruleDelete
		{ after(grammarAccess.getOperationAccess().getDeleteParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperationAccess().getUpdateParserRuleCall_2()); }
		ruleUpdate
		{ after(grammarAccess.getOperationAccess().getUpdateParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loader__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loader__Group__0__Impl
	rule__Loader__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Loader__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoaderAccess().getLoaderKeyword_0()); }
	'loader'
	{ after(grammarAccess.getLoaderAccess().getLoaderKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loader__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loader__Group__1__Impl
	rule__Loader__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Loader__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoaderAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getLoaderAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loader__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loader__Group__2__Impl
	rule__Loader__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Loader__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoaderAccess().getLoadmodelKeyword_2()); }
	'loadmodel'
	{ after(grammarAccess.getLoaderAccess().getLoadmodelKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loader__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loader__Group__3__Impl
	rule__Loader__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Loader__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoaderAccess().getLoadmodelAssignment_3()); }
	(rule__Loader__LoadmodelAssignment_3)
	{ after(grammarAccess.getLoaderAccess().getLoadmodelAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loader__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loader__Group__4__Impl
	rule__Loader__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Loader__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoaderAccess().getGroup_4()); }
	(rule__Loader__Group_4__0)?
	{ after(grammarAccess.getLoaderAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loader__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loader__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Loader__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoaderAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getLoaderAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Loader__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loader__Group_4__0__Impl
	rule__Loader__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Loader__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoaderAccess().getOperationsKeyword_4_0()); }
	'operations'
	{ after(grammarAccess.getLoaderAccess().getOperationsKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loader__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loader__Group_4__1__Impl
	rule__Loader__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Loader__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoaderAccess().getLeftCurlyBracketKeyword_4_1()); }
	'{'
	{ after(grammarAccess.getLoaderAccess().getLeftCurlyBracketKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loader__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loader__Group_4__2__Impl
	rule__Loader__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Loader__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoaderAccess().getOperationAssignment_4_2()); }
	(rule__Loader__OperationAssignment_4_2)
	{ after(grammarAccess.getLoaderAccess().getOperationAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loader__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loader__Group_4__3__Impl
	rule__Loader__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Loader__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoaderAccess().getGroup_4_3()); }
	(rule__Loader__Group_4_3__0)*
	{ after(grammarAccess.getLoaderAccess().getGroup_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loader__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loader__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Loader__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoaderAccess().getRightCurlyBracketKeyword_4_4()); }
	'}'
	{ after(grammarAccess.getLoaderAccess().getRightCurlyBracketKeyword_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Loader__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loader__Group_4_3__0__Impl
	rule__Loader__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Loader__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoaderAccess().getCommaKeyword_4_3_0()); }
	','
	{ after(grammarAccess.getLoaderAccess().getCommaKeyword_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loader__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Loader__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Loader__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoaderAccess().getOperationAssignment_4_3_1()); }
	(rule__Loader__OperationAssignment_4_3_1)
	{ after(grammarAccess.getLoaderAccess().getOperationAssignment_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LoadModel__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoadModel__Group__0__Impl
	rule__LoadModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadModel__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadModelAccess().getLoadModelAction_0()); }
	()
	{ after(grammarAccess.getLoadModelAccess().getLoadModelAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadModel__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LoadModel__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadModel__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLoadModelAccess().getUrlAssignment_1()); }
	(rule__LoadModel__UrlAssignment_1)?
	{ after(grammarAccess.getLoadModelAccess().getUrlAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__0__Impl
	rule__Table__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getTableAction_0()); }
	()
	{ after(grammarAccess.getTableAccess().getTableAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__1__Impl
	rule__Table__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getTableKeyword_1()); }
	'Table'
	{ after(grammarAccess.getTableAccess().getTableKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__2__Impl
	rule__Table__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getTableAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__3__Impl
	rule__Table__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getNameAssignment_3()); }
	(rule__Table__NameAssignment_3)?
	{ after(grammarAccess.getTableAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getTableAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Column__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group__0__Impl
	rule__Column__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getColumnAction_0()); }
	()
	{ after(grammarAccess.getColumnAccess().getColumnAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group__1__Impl
	rule__Column__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getColumnKeyword_1()); }
	'Column'
	{ after(grammarAccess.getColumnAccess().getColumnKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group__2__Impl
	rule__Column__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getColumnAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group__3__Impl
	rule__Column__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getNameAssignment_3()); }
	(rule__Column__NameAssignment_3)?
	{ after(grammarAccess.getColumnAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group__4__Impl
	rule__Column__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getGroup_4()); }
	(rule__Column__Group_4__0)?
	{ after(grammarAccess.getColumnAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getColumnAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Column__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group_4__0__Impl
	rule__Column__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getTableKeyword_4_0()); }
	'table'
	{ after(grammarAccess.getColumnAccess().getTableKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getTableNameAssignment_4_1()); }
	(rule__Column__TableNameAssignment_4_1)
	{ after(grammarAccess.getColumnAccess().getTableNameAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Add__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__0__Impl
	rule__Add__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getAddAction_0()); }
	()
	{ after(grammarAccess.getAddAccess().getAddAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__1__Impl
	rule__Add__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getAddKeyword_1()); }
	'Add'
	{ after(grammarAccess.getAddAccess().getAddKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__2__Impl
	rule__Add__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getAddAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__3__Impl
	rule__Add__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getTableAssignment_3()); }
	(rule__Add__TableAssignment_3)?
	{ after(grammarAccess.getAddAccess().getTableAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__4__Impl
	rule__Add__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getColumnAssignment_4()); }
	(rule__Add__ColumnAssignment_4)?
	{ after(grammarAccess.getAddAccess().getColumnAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Add__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAddAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getAddAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Delete__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group__0__Impl
	rule__Delete__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getDeleteAction_0()); }
	()
	{ after(grammarAccess.getDeleteAccess().getDeleteAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group__1__Impl
	rule__Delete__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getDeleteKeyword_1()); }
	'Delete'
	{ after(grammarAccess.getDeleteAccess().getDeleteKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group__2__Impl
	rule__Delete__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getDeleteAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group__3__Impl
	rule__Delete__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getTableAssignment_3()); }
	(rule__Delete__TableAssignment_3)?
	{ after(grammarAccess.getDeleteAccess().getTableAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group__4__Impl
	rule__Delete__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getColumnAssignment_4()); }
	(rule__Delete__ColumnAssignment_4)?
	{ after(grammarAccess.getDeleteAccess().getColumnAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getDeleteAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Update__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__0__Impl
	rule__Update__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getUpdateKeyword_0()); }
	'Update'
	{ after(grammarAccess.getUpdateAccess().getUpdateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__1__Impl
	rule__Update__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getUpdateAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__2__Impl
	rule__Update__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getTableAssignment_2()); }
	(rule__Update__TableAssignment_2)?
	{ after(grammarAccess.getUpdateAccess().getTableAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__3__Impl
	rule__Update__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getColumnAssignment_3()); }
	(rule__Update__ColumnAssignment_3)?
	{ after(grammarAccess.getUpdateAccess().getColumnAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__4__Impl
	rule__Update__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getNewNameKeyword_4()); }
	'newName'
	{ after(grammarAccess.getUpdateAccess().getNewNameKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__5__Impl
	rule__Update__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getNewNameAssignment_5()); }
	(rule__Update__NewNameAssignment_5)
	{ after(grammarAccess.getUpdateAccess().getNewNameAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getUpdateAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Loader__LoadmodelAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoaderAccess().getLoadmodelLoadModelParserRuleCall_3_0()); }
		ruleLoadModel
		{ after(grammarAccess.getLoaderAccess().getLoadmodelLoadModelParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loader__OperationAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoaderAccess().getOperationOperationParserRuleCall_4_2_0()); }
		ruleOperation
		{ after(grammarAccess.getLoaderAccess().getOperationOperationParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Loader__OperationAssignment_4_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoaderAccess().getOperationOperationParserRuleCall_4_3_1_0()); }
		ruleOperation
		{ after(grammarAccess.getLoaderAccess().getOperationOperationParserRuleCall_4_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LoadModel__UrlAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLoadModelAccess().getUrlEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getLoadModelAccess().getUrlEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getNameEStringParserRuleCall_3_0()); }
		ruleEString
		{ after(grammarAccess.getTableAccess().getNameEStringParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnAccess().getNameEStringParserRuleCall_3_0()); }
		ruleEString
		{ after(grammarAccess.getColumnAccess().getNameEStringParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__TableNameAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnAccess().getTableNameEStringParserRuleCall_4_1_0()); }
		ruleEString
		{ after(grammarAccess.getColumnAccess().getTableNameEStringParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__TableAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddAccess().getTableTableParserRuleCall_3_0()); }
		ruleTable
		{ after(grammarAccess.getAddAccess().getTableTableParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Add__ColumnAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAddAccess().getColumnColumnParserRuleCall_4_0()); }
		ruleColumn
		{ after(grammarAccess.getAddAccess().getColumnColumnParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__TableAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeleteAccess().getTableTableParserRuleCall_3_0()); }
		ruleTable
		{ after(grammarAccess.getDeleteAccess().getTableTableParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__ColumnAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeleteAccess().getColumnColumnParserRuleCall_4_0()); }
		ruleColumn
		{ after(grammarAccess.getDeleteAccess().getColumnColumnParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__TableAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateAccess().getTableTableParserRuleCall_2_0()); }
		ruleTable
		{ after(grammarAccess.getUpdateAccess().getTableTableParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__ColumnAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateAccess().getColumnColumnParserRuleCall_3_0()); }
		ruleColumn
		{ after(grammarAccess.getUpdateAccess().getColumnColumnParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__NewNameAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateAccess().getNewNameEStringParserRuleCall_5_0()); }
		ruleEString
		{ after(grammarAccess.getUpdateAccess().getNewNameEStringParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
